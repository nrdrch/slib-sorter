# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: windows

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: PyInstaller Windows
      # You may pin to the exact commit or the version.
      # uses: JackMcKew/pyinstaller-action-windows@a8dee21ad01bbc7e7363d445bb632691b95ba057
      uses: JackMcKew/pyinstaller-action-windows@v0.1.2
      with:
    # Directory containing source code (optional requirements.txt).
        path: src
    # Specify a custom URL for PYPI
        pypi_url: optional, default is https://pypi.python.org/
    # Specify a custom URL for PYPI Index
        pypi_index_url: optional, default is https://pypi.python.org/simple
    # Specify a file path for .spec file
        spec: optional, default is 
